<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
	<Type Name="tpClass">
		<DisplayString>{tpcFlags}</DisplayString>
		<Expand>
			<Item Name="[Voff]">tpcVptrOffs</Item>
			<Item Name="[Flag]">tpcFlags</Item>
			<Item Name="[GUID]">guid</Item>
			<CustomListItems>
				<Variable Name="baseListPtr" InitialValue="(tpid **)((LPBYTE)this - 8 + tpcBaseList)" />
				<Loop>
					<Break Condition="!*baseListPtr"/>
					<Item Name="{*(LPDWORD)(baseListPtr + 2)}b{*(LPDWORD)(baseListPtr + 1), Xb}">*baseListPtr</Item>
					<Exec>baseListPtr += 3</Exec>
				</Loop>
			</CustomListItems>
			<CustomListItems>
				<Variable Name="baseListPtr" InitialValue="(tpid **)((LPBYTE)this - 8 + tpcVbasList)" />
				<Loop>
					<Break Condition="!*baseListPtr"/>
					<Item Name="{*(LPDWORD)(baseListPtr + 2)}v{*(LPDWORD)(baseListPtr + 1), Xb}">*baseListPtr</Item>
					<Exec>baseListPtr += 3</Exec>
				</Loop>
			</CustomListItems>
			<CustomListItems>
				<Variable Name="dMemListPtr" InitialValue="(tpid **)((LPBYTE)this - 8 + tpcDtMembers)" />
				<Loop>
					<Break Condition="!*dMemListPtr"/>
					<Item Name="0m{*(LPDWORD)(dMemListPtr + 1), Xb}">*dMemListPtr</Item>
					<Exec>dMemListPtr += 2</Exec>
				</Loop>
			</CustomListItems>
		</Expand>
	</Type>
	<Type Name="tpid">
		<DisplayString>{(LPSTR)this + tpName, s}</DisplayString>
		<Expand HideRawView="true">
			<Item Name="[Name]">(LPSTR)this + tpName, sb</Item>
			<Item Name="[Size]">tpSize</Item>
			<Item Name="[Mask]">_tpMask</Item>
			<ExpandedItem Condition="_tpMask &amp; 0x0010">tpPtr</ExpandedItem>
			<ExpandedItem Condition="_tpMask &amp; 0x0400">tpArr</ExpandedItem>
			<ExpandedItem Condition="_tpMask &amp; 0x0002">tpClass</ExpandedItem>
		</Expand>
	</Type>
	<Type Name="ERRbc">
		<Expand>
			<ExpandedItem>ERRcInfo</ExpandedItem>
			<ExpandedItem>ERRcXtab->_ctxTbl[(ERRcCCtx-8)/12]</ExpandedItem>
		</Expand>
	</Type>
	<Type Name="_String_base">
		<DisplayString Condition="_M_end_of_storage == 0">{SubjectStringTable_array[sstIndex]}</DisplayString>
		<DisplayString>{_M_finish - _M_start} {_M_start, [_M_finish - _M_start]s}</DisplayString>
		<StringView>_M_start, [_M_finish - _M_start]</StringView>
	</Type>
	<Type Name="_Vector_string">
		<Expand>
			<ArrayItems>
				<Size>_M_finish - _M_start</Size>
				<ValuePointer>_M_start</ValuePointer>
			</ArrayItems>
		</Expand>
	</Type>
	<Type Name="_Vector_base">
		<Expand>
			<ArrayItems Condition="(*(TAdjustmentAttribute**)_M_start)->VTable >= 0x00602000
						&amp;&amp; (*(TAdjustmentAttribute**)_M_start)->VTable &lt; 0x00650000">
				<Size>(void **)_M_finish - (void **)_M_start</Size>
				<ValuePointer>(TAdjustmentAttribute **)_M_start</ValuePointer>
			</ArrayItems>
			<ArrayItems Condition="((_List_base *)_M_start)->_M_node >= 0x10000
						&amp;&amp; ((_List_base *)_M_start)->_M_node->_M_next >= 0x10000
						&amp;&amp; ((_List_base *)_M_start)->_M_node->_M_prev >= 0x10000">
				<Size>(_List_base *)_M_finish - (_List_base *)_M_start</Size>
				<ValuePointer>(_List_base *)_M_start</ValuePointer>
			</ArrayItems>
		</Expand>
	</Type>
	<Type Name="_TSSGSubject">
		<DisplayString>{stype} {SubjectProperty[propertyIndex]}</DisplayString>
	</Type>
	<Type Name="_Vector_PTSSGSubject">
		<Expand>
			<ArrayItems>
				<Size>(void **)_M_finish - (void **)_M_start</Size>
				<ValuePointer>(TSSGSubject **)_M_start</ValuePointer>
			</ArrayItems>
		</Expand>
	</Type>
	<Type Name="_TAdjustmentAttribute">
		<DisplayString>{type} {c_str, s}</DisplayString>
	</Type>
	<Type Name="pair_byte_string">
		<DisplayString>{first} {second}</DisplayString>
	</Type>
	<Type Name="_List_node">
		<DisplayString Condition="((char*)_M_data)[0] >= 0
					   &amp;&amp; ((int *)_M_data)[2] >= 0x10000
					   &amp;&amp; ((int *)_M_data)[3] >= 0x10000
					   &amp;&amp; ((int *)_M_data)[6] >= 0x10000
					   ">{(pair_byte_string *)_M_data, na}</DisplayString>
	</Type>
	<Type Name="_List_base">
		<Expand>
			<LinkedListItems Condition="(*(TAdjustmentAttribute**)_M_node->_M_next->_M_data)->VTable >= 0x00602000
							 &amp;&amp; (*(TAdjustmentAttribute**)_M_node->_M_next->_M_data)->VTable &lt; 0x00650000">
				<HeadPointer>_M_node->_M_next</HeadPointer>
				<NextPointer>_M_next</NextPointer>
				<ValueNode>*(TAdjustmentAttribute **)_M_data</ValueNode>
			</LinkedListItems>
			<LinkedListItems Condition="(*(int**)_M_node->_M_next->_M_data)[0] >= 0x10000
							 &amp;&amp; (*(int**)_M_node->_M_next->_M_data)[1] >= 0x10000
							 &amp;&amp; (*(int**)_M_node->_M_next->_M_data)[2] >= 0x10000
							 &amp;&amp; (*(int**)_M_node->_M_next->_M_data)[3] == 0
							 &amp;&amp; (*(int**)_M_node->_M_next->_M_data)[4] >= 0x10000
							 &amp;&amp; (*(int**)_M_node->_M_next->_M_data)[5] &lt; 0x10000
							 ">
				<HeadPointer>_M_node->_M_next</HeadPointer>
				<NextPointer>_M_next</NextPointer>
				<ValueNode>*(_Vector_base **)_M_data</ValueNode>
			</LinkedListItems>
			<LinkedListItems Condition="((char*)_M_node->_M_next->_M_data)[0] >= 0
							 &amp;&amp; ((int *)_M_node->_M_next->_M_data)[2] >= 0x10000
							 &amp;&amp; ((int *)_M_node->_M_next->_M_data)[3] >= 0x10000
							 &amp;&amp; ((int *)_M_node->_M_next->_M_data)[6] >= 0x10000
							 ">
				<HeadPointer>_M_node->_M_next</HeadPointer>
				<NextPointer>_M_next</NextPointer>
				<ValueNode>(pair_byte_string *)_M_data</ValueNode>
			</LinkedListItems>
		</Expand>
	</Type>
	<Type Name="_Deque_base">
		<DisplayString>[ {_M_finish._M_node - _M_start._M_node} ]</DisplayString>
		<Expand>
			<IndexListItems>
				<Size>_M_finish._M_node - _M_start._M_node</Size>
				<ValueNode>*(TAdjustmentAttribute **)_M_start._M_node[$i] </ValueNode>
			</IndexListItems>
		</Expand>
	</Type>
	<Type Name="_Rb_tree_node">
		<DisplayString Condition="(*(TAdjustmentAttribute**)_M_value_field)->VTable >= 0x00602000 &amp;&amp; (*(TAdjustmentAttribute**)_M_value_field)->VTable &lt; 0x00650000 &amp;&amp; (*(TAdjustmentAttribute**)_M_value_field)->type &lt; 0x10000">{(*(TAdjustmentAttribute**)_M_value_field), na}</DisplayString>
		<DisplayString Condition="*(LPDWORD)_M_value_field &lt; 0x10000 &amp;&amp; ((_Deque_base*)&amp;_M_value_field[8])->_M_map >= 0x10000 &amp;&amp; ((_Deque_base*)&amp;_M_value_field[8])->_M_map_size &lt; 0x10000">{(Attribute*)_M_value_field, na}</DisplayString>
		<DisplayString Condition="((_Rb_tree*)_M_value_field)->_M_header >= 0x10000 &amp;&amp; ((_Rb_tree*)_M_value_field)->_M_node_count &lt; 0x10000">{(_Rb_tree*)_M_value_field, na}</DisplayString>
		<DisplayString Condition="((_String_base*)_M_value_field)->_M_start >= 0x10000 &amp;&amp; ((_String_base*)_M_value_field)->_M_finish >= 0x10000 &amp;&amp; ((_String_base*)_M_value_field)->_M_end_of_storage >= 0x10000">{(_String_base*)_M_value_field, na}</DisplayString>
		<DisplayString Condition="*(LPDWORD)_M_value_field &lt; 0x10000">{SubjectStringTable_array[*(LPDWORD)_M_value_field]}</DisplayString>
		<Expand>
			<ExpandedItem Condition="*(LPDWORD)_M_value_field &lt; 0x10000 &amp;&amp; ((_Deque_base*)&amp;_M_value_field[8])->_M_map >= 0x10000 &amp;&amp; ((_Deque_base*)&amp;_M_value_field[8])->_M_map_size &lt; 0x10000">(_Deque_base*)&amp;_M_value_field[8]</ExpandedItem>
			<Item Name="[Key]" Condition="((_Rb_tree*)_M_value_field)->_M_header >= 0x10000 &amp;&amp; ((_Rb_tree*)_M_value_field)->_M_node_count &lt; 0x10000"> (_Rb_tree*     )     _M_value_field</Item>
			<ExpandedItem      Condition="((_Rb_tree*)_M_value_field)->_M_header >= 0x10000 &amp;&amp; ((_Rb_tree*)_M_value_field)->_M_node_count &lt; 0x10000">*(_Vector_base**)&amp;_M_value_field[sizeof(_Rb_tree)]</ExpandedItem>
			<ExpandedItem Condition="((_String_base*)_M_value_field)->_M_start >= 0x10000 &amp;&amp; ((_String_base*)_M_value_field)->_M_finish >= 0x10000 &amp;&amp; ((_String_base*)_M_value_field)->_M_end_of_storage >= 0x10000">(_String_base*)_M_value_field</ExpandedItem>
		</Expand>
	</Type>
	<Type Name="_Rb_tree">
		<DisplayString>{{ {_M_node_count} }}</DisplayString>
		<Expand>
			<TreeItems>
				<Size>_M_node_count</Size>
				<HeadPointer>_M_header->_M_parent</HeadPointer>
				<LeftPointer>_M_left</LeftPointer>
				<RightPointer>_M_right</RightPointer>
				<ValueNode>this</ValueNode>
			</TreeItems>
		</Expand>
	</Type>
	<Type Name="_MARKUP">
		<DisplayString>{Depth}-{LoopDepth} {String, [Length]s} {Tag, en}</DisplayString>
	</Type>
	<Type Name="_VARIABLE">
		<DisplayString>{String, [Length]s} {Value}</DisplayString>
	</Type>
</AutoVisualizer>
